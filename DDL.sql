DROP DATABASE IF EXISTS qodingchallenge;

CREATE DATABASE qodingchallenge;

USE qodingchallenge;

CREATE TABLE CAMPAIGN
(
   CAMPAIGN_ID          INT AUTO_INCREMENT,
   CAMPAIGN_NAME        VARCHAR(255) NOT NULL UNIQUE,
   CATEGORY_NAME        VARCHAR(255) NOT NULL,
   CAMPAIGN_TYPE        VARCHAR(255) NOT NULL,
   USERNAME             VARCHAR(255) NOT NULL,
   TIMELIMIT            SMALLINT,
   STATE                BOOL NOT NULL,
   TIMESTAMP_CREATED    TIMESTAMP NOT NULL DEFAULT now(),
   PRIMARY KEY (CAMPAIGN_ID)
);

CREATE TABLE AMOUNT_OF_QUESTIONS
(
   CAMPAIGN_ID          INT NOT NULL,
   TYPE                 INT NOT NULL,
   AMOUNT               INT NOT NULL
);

CREATE TABLE QUESTION_TYPE
(
    ID          INT AUTO_INCREMENT,
    TYPE        VARCHAR(255),
    AMOUNT      INT,
    PRIMARY KEY (ID)
);

CREATE TABLE CAMPAIGN_TYPE
(
   CAMPAIGN_TYPE        VARCHAR(255) NOT NULL,
   PRIMARY KEY (CAMPAIGN_TYPE)
);

CREATE TABLE CATEGORY
(
   CATEGORY_NAME        VARCHAR(255) NOT NULL,
   PRIMARY KEY (CATEGORY_NAME)
);

CREATE TABLE CONFERENCE
(
   PARTICIPANTID        VARCHAR(36) NOT NULL,
   FIRSTNAME            VARCHAR(255) NOT NULL,
   INSERTION            VARCHAR(20),
   LASTNAME             VARCHAR(255) NOT NULL,
   EMAIL                VARCHAR(255),
   PHONENUMBER          BIGINT,
   PRIMARY KEY (PARTICIPANTID)
);

CREATE TABLE GIVEN_ANSWER_STATE
(
   QUESTIONID           SMALLINT NOT NULL,
   PARTICIPANTID        VARCHAR(36) NOT NULL,
   CAMPAIGN_ID          INT,
   STATEID              SMALLINT NOT NULL,
   PRIMARY KEY (QUESTIONID, PARTICIPANTID, CAMPAIGN_ID)
);

CREATE TABLE GIVEN_ANSWER
(
   AUTOID               INT AUTO_INCREMENT,
   QUESTIONID           SMALLINT NOT NULL,
   PARTICIPANTID        VARCHAR(36) NOT NULL,
   CAMPAIGN_ID          INT,
   GIVEN_ANSWER         VARCHAR(1024) NOT NULL,
   PRIMARY KEY (AUTOID),
   constraint FK_GIVEN_ANSWER6 foreign key (QUESTIONID, PARTICIPANTID, CAMPAIGN_ID) references GIVEN_ANSWER_STATE(QUESTIONID, PARTICIPANTID, CAMPAIGN_ID)
);

CREATE TABLE MULTIPLE_CHOICE_QUESTION
(
   QUESTIONID           SMALLINT NOT NULL,
   ANSWER_OPTIONS       VARCHAR(255) NOT NULL,
   IS_CORRECT           BOOL NOT NULL,
   PRIMARY KEY (QUESTIONID, ANSWER_OPTIONS)
);

CREATE TABLE PARTICIPANT_OF_CAMPAIGN
(
   PARTICIPANTID        VARCHAR(36) NOT NULL,
   CAMPAIGN_ID          INT,
   TIME_STARTED         TIMESTAMP NOT NULL DEFAULT now(),
   TIME_ENDED           TIMESTAMP NULL,
   TIME_SPEND           BIGINT AS (TIMESTAMPDIFF(MICROSECOND ,TIME_STARTED, TIME_ENDED) / 1000),
   PRIMARY KEY (PARTICIPANTID, CAMPAIGN_ID)
);

CREATE TABLE PROGRAMMING_QUESTION
(
   QUESTIONID           SMALLINT NOT NULL,
   STARTCODE            VARCHAR(1024),
   TESTCODE             VARCHAR(4096)
);

CREATE TABLE QUESTION
(
   QUESTIONID           SMALLINT NOT NULL AUTO_INCREMENT,
   CATEGORY_NAME        VARCHAR(255) NOT NULL,
   QUESTION             VARCHAR(255) NOT NULL,
   STATE                BOOL NOT NULL DEFAULT 1,
   QUESTION_TYPE        INT,
   ATTACHMENT           VARCHAR(4096),
   PRIMARY KEY (QUESTIONID)
);

CREATE TABLE STATE
(
   STATEID              SMALLINT NOT NULL,
   STATE_NAME           VARCHAR(50) NOT NULL,
   PRIMARY KEY (STATEID)
);

ALTER TABLE CAMPAIGN ADD CONSTRAINT FK_CAMPAIGN_TYPE_OF_CAMPAIGN FOREIGN KEY (CAMPAIGN_TYPE)
      REFERENCES CAMPAIGN_TYPE (CAMPAIGN_TYPE) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE CAMPAIGN ADD CONSTRAINT FK_CATEGORY_OF_CAMPAIGN FOREIGN KEY (CATEGORY_NAME)
      REFERENCES CATEGORY (CATEGORY_NAME) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE GIVEN_ANSWER_STATE ADD CONSTRAINT FK_GIVEN_ANSWER FOREIGN KEY (QUESTIONID)
      REFERENCES QUESTION (QUESTIONID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE GIVEN_ANSWER_STATE ADD CONSTRAINT FK_GIVEN_ANSWER2 FOREIGN KEY (PARTICIPANTID)
      REFERENCES CONFERENCE (PARTICIPANTID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE GIVEN_ANSWER_STATE ADD CONSTRAINT FK_GIVEN_ANSWER3 FOREIGN KEY (CAMPAIGN_ID)
      REFERENCES CAMPAIGN (CAMPAIGN_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE GIVEN_ANSWER_STATE ADD CONSTRAINT FK_GIVEN_ANSWER5 FOREIGN KEY (STATEID)
      REFERENCES STATE (STATEID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE MULTIPLE_CHOICE_QUESTION ADD CONSTRAINT FK_TYPE_OF_QUESTION FOREIGN KEY (QUESTIONID)
      REFERENCES QUESTION (QUESTIONID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE PROGRAMMING_QUESTION ADD CONSTRAINT FK_QUESTIUN_ID FOREIGN KEY (QUESTIONID)
      REFERENCES QUESTION (QUESTIONID) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE PARTICIPANT_OF_CAMPAIGN ADD CONSTRAINT FK_PARTICIPANT_OF_CAMPAIGN FOREIGN KEY (PARTICIPANTID)
      REFERENCES CONFERENCE (PARTICIPANTID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE PARTICIPANT_OF_CAMPAIGN ADD CONSTRAINT FK_PARTICIPANT_OF_CAMPAIGN2 FOREIGN KEY (CAMPAIGN_ID)
      REFERENCES CAMPAIGN (CAMPAIGN_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE PROGRAMMING_QUESTION ADD CONSTRAINT FK_TYPE_OF_QUESTION3 FOREIGN KEY (QUESTIONID)
      REFERENCES QUESTION (QUESTIONID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE QUESTION ADD CONSTRAINT FK_CATEGORY_OF_QUESTION FOREIGN KEY (CATEGORY_NAME)
      REFERENCES CATEGORY (CATEGORY_NAME) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE AMOUNT_OF_QUESTIONS ADD CONSTRAINT FK_AMOUNT_OF_QUESTIONS FOREIGN KEY (CAMPAIGN_ID)
    REFERENCES CAMPAIGN(CAMPAIGN_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE QUESTION ADD CONSTRAINT FK_QUESTION_TYPE_QUESTION FOREIGN KEY (QUESTION_TYPE)
    REFERENCES QUESTION_TYPE(ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE AMOUNT_OF_QUESTIONS ADD CONSTRAINT FK_QUESTION_TYPE_AMOUNT FOREIGN KEY (TYPE)
    REFERENCES QUESTION_TYPE(ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE CONFERENCE ADD CONSTRAINT CHK_PHONE_EMAIL CHECK ((EMAIL IS NOT NULL) OR (PHONENUMBER IS NOT NULL));

ALTER TABLE CAMPAIGN ADD CONSTRAINT CHK_CAMPAIGN_TIMELIMIT CHECK ((TIMELIMIT IS NULL) OR (TIMELIMIT > 0));

ALTER TABLE QUESTION ADD CONSTRAINT UC_Question UNIQUE (QUESTION, CATEGORY_NAME);
